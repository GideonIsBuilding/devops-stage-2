version: '3.7'
services:
  frontend:
    build:
      context: ./frontend
      args:
        - VITE_API_URL=http://localhost:8000
    container_name: frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`yourdomain.com`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.middlewares=redirect@file"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    environment:
      - VITE_API_URL=http://localhost:8000

  backend:
    build: ./backend
    container_name: backend
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_SERVER=db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`yourdomain.com`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.middlewares=redirect@file"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  db:
    image: postgres
    container_name: db
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: app
      POSTGRES_PASSWORD: changethis123
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    container_name: adminer
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`db.yourdomain.com`)"
      - "traefik.http.routers.adminer.entrypoints=web"
      - "traefik.http.routers.adminer.middlewares=redirect@file"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    ports:
      - "8080:8080"

  traefik:
    image: traefik:v3.1
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8090:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik.yml:/etc/traefik/traefik.yml"

volumes:
  postgres_data:
